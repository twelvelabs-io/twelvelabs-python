# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....types.video_item import VideoItem
from ....types.video_item_failed import VideoItemFailed


class TransfersGetStatusResponse(UniversalBaseModel):
    not_imported: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    An array of filenames that haven't yet been imported.
    """

    validating: typing.Optional[typing.List[VideoItem]] = pydantic.Field(default=None)
    """
    An array of videos that are being validated.
    """

    pending: typing.Optional[typing.List[VideoItem]] = pydantic.Field(default=None)
    """
    An array of videos that are pending.
    """

    queued: typing.Optional[typing.List[VideoItem]] = pydantic.Field(default=None)
    """
    An array of videos that are queued for import.
    """

    indexing: typing.Optional[typing.List[VideoItem]] = pydantic.Field(default=None)
    """
    An array of videos that are being indexed.
    """

    ready: typing.Optional[typing.List[VideoItem]] = pydantic.Field(default=None)
    """
    An array of videos that have successfully been imported.
    """

    failed: typing.Optional[typing.List[VideoItemFailed]] = pydantic.Field(default=None)
    """
    An array of videos that failed to import.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
