# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class SummarizeHighlightResultHighlightsItem(UniversalBaseModel):
    """
    An object that provides a brief snapshot of a specific part of the video.
    """

    start: typing.Optional[int] = pydantic.Field(default=None)
    """
    The starting time of the highlight, measured in seconds from the beginning of the video.
    """

    end: typing.Optional[int] = pydantic.Field(default=None)
    """
    The ending time of the highlight, measured in seconds from the beginning of the video.
    """

    start_sec: typing.Optional[float] = pydantic.Field(default=None)
    """
    The starting time of the highlight, measured in seconds from the beginning of the video.
    """

    end_sec: typing.Optional[float] = pydantic.Field(default=None)
    """
    The ending time of the chapter, measured in seconds from the beginning of the video.
    """

    highlight: typing.Optional[str] = pydantic.Field(default=None)
    """
    The tile of the highlight.
    """

    highlight_summary: typing.Optional[str] = pydantic.Field(default=None)
    """
    A brief description that captures the essence of this part of the video.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
