# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .base_segment import BaseSegment


class TextEmbeddingResult(UniversalBaseModel):
    """
    An object containing the generated embedding vector.
    """

    error_message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message if the embedding generation failed.
    """

    segments: typing.Optional[typing.List[BaseSegment]] = pydantic.Field(default=None)
    """
    An object that contains the embedding.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
